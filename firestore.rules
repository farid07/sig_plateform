rules_version = '2';
service cloud.firestore {
    match /databases/{database}/documents {
        match /users/{uid} {
            allow read, write: if isSignedIn();
            allow delete: if isOwner() || isAdmin();
            allow update: if isOwner() && willBeOwner() || isAdmin();
            allow create: if willBeOwner();
        }

        match /equipments {
            allow read, write: if isSignedIn();
            allow delete: if isOwner() && isOperator() || isAdmin();
            allow update: if isOwner() && isOperator() || isAdmin();
            allow create: if isOperator();
        }

        match /operators/{uid} {
            allow read, write: if isSignedIn();
            allow delete: if isOwner() || isAdmin();
            allow update: if isOwner() && willBeOperatorOwner() || isAdmin();
            allow create: if willBeOperatorOwner();
        }
    }
}

function isUser(uid) {
return isSignedIn() && request.auth.uid == uid;
}

function isSignedIn() {
return request.auth.uid != null;
}

function isOwner(){
return isUser(currentData().userId);
}

function isAdmin(){
return request.auth.accountType == "admin";
}

function isOperator(){
return request.auth.accountType == "operator";
}

function isOperatorOwner(){
return isUser(currentData().userId);
}

function willBeOwner(){
return isUser(incomingData().userId);
}

function willBeOperatorOwner(){
return isUser(incomingData().userId);
}

function currentData() {
return resource.data;
}

function incomingData() {
return request.resource.data;
}